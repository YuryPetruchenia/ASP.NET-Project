// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Clietn.Controllers
{
    public partial class TrackController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected TrackController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetTracks()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTracks);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetUserPlayList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUserPlayList);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public TrackController Actions { get { return MVC.Track; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Track";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Track";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GetTracks = "GetTracks";
            public readonly string GetUserPlayList = "GetUserPlayList";
            public readonly string GetGenresList = "GetGenresList";
            public readonly string GetAutorsList = "GetAutorsList";
            public readonly string GetAlbumsList = "GetAlbumsList";
            public readonly string Search = "Search";
            public readonly string PlayerPartial = "PlayerPartial";
            public readonly string IMusic = "IMusic";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GetTracks = "GetTracks";
            public const string GetUserPlayList = "GetUserPlayList";
            public const string GetGenresList = "GetGenresList";
            public const string GetAutorsList = "GetAutorsList";
            public const string GetAlbumsList = "GetAlbumsList";
            public const string Search = "Search";
            public const string PlayerPartial = "PlayerPartial";
            public const string IMusic = "IMusic";
        }


        static readonly ActionParamsClass_GetTracks s_params_GetTracks = new ActionParamsClass_GetTracks();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTracks GetTracksParams { get { return s_params_GetTracks; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTracks
        {
            public readonly string titleList = "titleList";
        }
        static readonly ActionParamsClass_GetUserPlayList s_params_GetUserPlayList = new ActionParamsClass_GetUserPlayList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserPlayList GetUserPlayListParams { get { return s_params_GetUserPlayList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserPlayList
        {
            public readonly string info = "info";
        }
        static readonly ActionParamsClass_GetGenresList s_params_GetGenresList = new ActionParamsClass_GetGenresList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetGenresList GetGenresListParams { get { return s_params_GetGenresList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetGenresList
        {
            public readonly string genreName = "genreName";
        }
        static readonly ActionParamsClass_GetAutorsList s_params_GetAutorsList = new ActionParamsClass_GetAutorsList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAutorsList GetAutorsListParams { get { return s_params_GetAutorsList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAutorsList
        {
            public readonly string autor = "autor";
        }
        static readonly ActionParamsClass_GetAlbumsList s_params_GetAlbumsList = new ActionParamsClass_GetAlbumsList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAlbumsList GetAlbumsListParams { get { return s_params_GetAlbumsList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAlbumsList
        {
            public readonly string album = "album";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string GetAlbumsList = "GetAlbumsList";
                public readonly string GetAutorsList = "GetAutorsList";
                public readonly string GetGenresList = "GetGenresList";
                public readonly string GetMostPopularTreck = "GetMostPopularTreck";
                public readonly string GetUserPlayList = "GetUserPlayList";
                public readonly string IMusic = "IMusic";
                public readonly string PlayerPartial = "PlayerPartial";
                public readonly string Search = "Search";
            }
            public readonly string GetAlbumsList = "~/Views/Track/GetAlbumsList.cshtml";
            public readonly string GetAutorsList = "~/Views/Track/GetAutorsList.cshtml";
            public readonly string GetGenresList = "~/Views/Track/GetGenresList.cshtml";
            public readonly string GetMostPopularTreck = "~/Views/Track/GetMostPopularTreck.cshtml";
            public readonly string GetUserPlayList = "~/Views/Track/GetUserPlayList.cshtml";
            public readonly string IMusic = "~/Views/Track/IMusic.cshtml";
            public readonly string PlayerPartial = "~/Views/Track/PlayerPartial.cshtml";
            public readonly string Search = "~/Views/Track/Search.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_TrackController : Clietn.Controllers.TrackController
    {
        public T4MVC_TrackController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GetTracksOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string titleList);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetTracks(string titleList)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTracks);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "titleList", titleList);
            GetTracksOverride(callInfo, titleList);
            return callInfo;
        }

        [NonAction]
        partial void GetUserPlayListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string info);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetUserPlayList(string info)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetUserPlayList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "info", info);
            GetUserPlayListOverride(callInfo, info);
            return callInfo;
        }

        [NonAction]
        partial void GetGenresListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetGenresList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetGenresList);
            GetGenresListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetGenresListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string genreName);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetGenresList(string genreName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetGenresList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "genreName", genreName);
            GetGenresListOverride(callInfo, genreName);
            return callInfo;
        }

        [NonAction]
        partial void GetAutorsListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAutorsList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAutorsList);
            GetAutorsListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetAutorsListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string autor);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAutorsList(string autor)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAutorsList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "autor", autor);
            GetAutorsListOverride(callInfo, autor);
            return callInfo;
        }

        [NonAction]
        partial void GetAlbumsListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAlbumsList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAlbumsList);
            GetAlbumsListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetAlbumsListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string album);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAlbumsList(string album)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAlbumsList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "album", album);
            GetAlbumsListOverride(callInfo, album);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            SearchOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PlayerPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PlayerPartial()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerPartial);
            PlayerPartialOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void IMusicOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult IMusic()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IMusic);
            IMusicOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
